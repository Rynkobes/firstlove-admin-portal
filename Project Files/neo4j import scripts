// Q1 Town, Community and Centre data import script
LOAD CSV WITH HEADERS FROM "file:///Communities.csv" as line
MERGE(t:Town {name: apoc.text.capitalizeAll(toLower(line.`NAME OF TOWN`))})
SET 
	t.townID = apoc.create.uuid()
MERGE(C: Community {name: apoc.text.capitalizeAll(toLower(trim(line.`NAME OF COMMUNITY`)))})
	ON CREATE SET
   C.communityID = apoc.create.uuid()
MERGE(t)-[:HAS_COMMUNITY]->(C);

LOAD CSV WITH HEADERS FROM "file:///Centres-Table.csv" as line
MERGE(cen: Centre{name:line.`CENTRE NAME`})
	ON CREATE SET 
    cen.centreID = apoc.create.uuid()
    cen.centreCode = line.'SERVICE CODE'
 	cen.latitude = line.LATITUDE
    cen.longitude = line.LONGITUDE
MERGE(C)-[:HAS_CENTRE]->(cen)
MERGE (cen)-[:HAS_SERVICE_DAY]-> (sDay:ServiceDay {day: line.`SERVICE DAY`  })
 
// Q2 firstlove membership data Import script
LOAD CSV WITH HEADERS FROM "file:///Members.csv" as line
CREATE(m:Member {memberId: apoc.create.uuid()})
	SET 
    m.firstName = line.firstName,
    m.lastName = line.lastName,
    m.email = line.email,
    m.phoneNumber = line.phoneNumber,
    m.centreCode = line.centreCode,
    m.whatsAppNumber = line.whatsappNumber
 

MERGE(g: Gender {gender: line.gender})
MERGE(m)-[:HAS_GENDER]->(g)

MERGE(ms: MaritalStatus {status: line.maritalStatus})
MERGE(m)-[:HAS_MARITAL_STATUS]->(ms)

MERGE(d: DateofBirth{date:line.dob})
MERGE(m)-[:WAS_BORN_ON]->(d)

MERGE(b:Bacenta {name:line.bacenta})
MERGE(m)-[:BELONGS_TO]->(b)

with line,m WHERE line.occupation is not null
MERGE(O:Occupation {occupation: line.occupation})
MERGE(m)-[:HAS_OCCUPATION]->(O)

//with line WHERE line.title is not null
//MERGE(l: Leader{title: line.title})
//MERGE(m)-[:IS_A]->(l)

with line, m  WHERE line.ministry is not null
MERGE(S: Sonta {name:line.ministry})
MERGE(m)-[:BELONGS_TO]->(S)

//return m

//Q3 Relationships
/// Centre Leader Relationships
LOAD CSV WITH HEADERS FROM "file:///Centres-Table.csv" as line
MATCH (m:Member {firstName: line.LeaderFirstName, lastName: line.LeaderLastName}), (c:Centre {centreCode:line.centreCode})
CREATE (m)-[:LEADS]->(c);

// Community Leadership relationships
LOAD CSV WITH HEADERS FROM "file:///Communities.csv" as line
MATCH (m:Member {firstName: line.LeaderFirstName, lastName: line.LeaderLastName}), (c:Community {name:line.Name})
CREATE (m)-[:LEADS]->(c);

// Bacenta Leaders relationships, bacenta-centre relationships
LOAD CSV WITH HEADERS FROM "file:///Bacenta-Table.csv" as line
MATCH (m:Member {firstName: line.bacentaLeaderFirstName, lastName: line.bacentaLeaderLastName}),(c:Centre {centreCode: line.centreCode}),
(b:Bacenta {name:line.bacentaName})
CREATE (m)-[:LEADS]->(b)
CREATE (c)-[:HAS_BACENTA]->(b);


// Sonta Leader Relationships
LOAD CSV WITH HEADERS FROM "file:///Sonta-Table.csv" as line
MATCH (m:Member {firstName: line.LeaderFirstName, lastName: line.LeaderLastName}), (s:Sonta {name:line.Ministry})
CREATE (m)-[:LEADS]->(s);

//Q4 Apostle in Charge of Kasoa Town: Rev Hubert Duell
MATCH (m:Member), (t:Town)
WHERE m.lastName = 'Duell' AND t.name = 'Kasoa'
MERGE (m)-[:LEADS]->(t)
RETURN m